services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: tech-challenge-backend
    ports:
      - "8080:8080"
      -  "8787:8787"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/tech_challenge_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: 123456
      TZ: America/Sao_Paulo

      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest

      SPRING_RABBITMQ_PUBLISHER_CONFIRM_TYPE: CORRELATED
      SPRING_RABBITMQ_PUBLISHER_RETURNS: "true"
      SPRING_RABBITMQ_TEMPLATE_MANDATORY: "true"

      # Configurações do listener (ajuste conforme necessário)
      # SPRING_RABBITMQ_LISTENER_SIMPLE_PREFETCH: 10
      # SPRING_RABBITMQ_LISTENER_SIMPLE_CONCURRENCY: 1
      # SPRING_RABBITMQ_LISTENER_SIMPLE_MAX_CONCURRENCY: 4

    depends_on:
      - db
      - rabbitmq

  db:
    volumes:
      - tech_challenge_db-data:/var/lib/postgresql/data
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: tech_challenge_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123456
      TZ: America/Sao_Paulo
    ports:
      - "5432:5432"

  db_test:
    volumes:
      - db_test_data:/var/lib/postgresql/data
    image: postgres:16
    environment:
      POSTGRES_DB: tech_challenge_test_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123456
      TZ: America/Sao_Paulo
    ports:
      - "5433:5432"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: tech-challenge-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

volumes:
  db_test_data:
  tech_challenge_db-data:
